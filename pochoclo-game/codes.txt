    Botón
    
    let widthMenu = 20
    // Menu Button
    this.box = this.add
      .text(widthMenu , height - 65, "Menu", {
        fontSize: "130px",
        backgroundColor: "#ffffff",
        color: "#000000",
        padding: { x: 10, y: 5 },
        border: "60px solid #000000",
      })
      .setInteractive();
    this.box.setScale(0.32);
    this.box.on("pointerdown", () => this.toggleOptions());

    // Crear las opciones (inicialmente invisibles)
    this.options = [];
    const optionTexts = ["Opción 1", "Opción 2", "Opción 3"];
    for (let i = 0; i < optionTexts.length; i++) {
      let option = this.add
        .text(widthMenu , height - 86 + i * -42, optionTexts[i], {
          fontSize: "100px",
          backgroundColor: "#ffffff",
          color: "#000000",
          padding: { x: 10, y: 5 },
          border: "80px solid #000000",
        })
        .setInteractive();
      option.visible = false;
      option.setScale(0.3);
      option.on("pointerdown", () => this.toggleOption(option));
      this.options.push(option);
    }

toggleOptions() {
    // Mostrar u ocultar las opciones
    this.options.forEach((option, index) => {
      if (option.visible) {
        this.tweens.add({
          targets: option,
          y: option.y + 20,
          alpha: 0,
          duration: 500,
          onComplete: () => option.setVisible(false),
        });
      } else {
        option.setVisible(true);
        this.tweens.add({
          targets: option,
          y: option.y - 20,
          alpha: 1,
          duration: 500,
        });
      }
    });
  }

  toggleOption(option) {
    // Activar o desactivar la opción
    option.setStyle({
      backgroundColor:
        option.style.backgroundColor === "#ffffff" ? "#00ff00" : "#ffffff",
    });
  }


// Como linkear un archivo json al proyecto phaser
.json
{
  "powerUps": {
    "type": ["speed", "strength", "shield", "health"],
    "duration": [10, 20, 30],
    "rarity": ["common", "rare", "epic", "legendary"]
  }
}

// Escena
  preload() {
    // Cargar el archivo JSON
    this.load.json('powerUpData', 'assets/data.json');
  }

  create() {
    // Obtener los datos del archivo JSON
    let powerUpData = this.cache.json.get('powerUpData');

    // Acceder a los valores
    let possibleTypes = powerUpData.powerUps.type;
    let possibleDurations = powerUpData.powerUps.duration;
    let possibleRarities = powerUpData.powerUps.rarity;

    // Ejemplo: Mostrar un tipo de power-up al azar
    let randomType = Phaser.Utils.Array.GetRandom(possibleTypes);
    console.log('Power-up aleatorio:', randomType);
  }


